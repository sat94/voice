#!/usr/bin/env python3
"""Test du mode d√©mo avec diff√©rentes cat√©gories de questions"""

import requests
import json

# Configuration
API_URL = "http://localhost:8001"
API_KEY = "152445aasdaiaze145ae656ae2312aaaezaz32a132√πaez√π√πaaeae√π√πaeaea"

headers = {
    "X-API-Key": API_KEY,
    "Content-Type": "application/json"
}

# Questions de test pour le mode d√©mo
demo_questions = [
    # S√©duction
    {
        "prompt": "Comment draguer une fille dans un caf√© ?",
        "expected_category": "seduction"
    },
    {
        "prompt": "Je manque de confiance pour aborder quelqu'un",
        "expected_category": "seduction"
    },
    
    # Psychologie
    {
        "prompt": "J'ai de l'anxi√©t√© avant mes rendez-vous",
        "expected_category": "psychology"
    },
    {
        "prompt": "Mes √©motions sont contradictoires en amour",
        "expected_category": "psychology"
    },
    
    # Sexologie
    {
        "prompt": "Qu'est-ce que la libido exactement ?",
        "expected_category": "sexology"
    },
    
    # Amiti√©
    {
        "prompt": "Mon ami me donne des conseils relationnels",
        "expected_category": "friendship"
    },
    
    # G√©n√©ral
    {
        "prompt": "Comment dire bonjour √† quelqu'un qui me pla√Æt ?",
        "expected_category": "general"
    }
]

def test_demo_responses():
    """Test les r√©ponses du mode d√©mo"""
    print("üé≠ Test du mode d√©mo - R√©ponses intelligentes sans cl√©s API\n")
    
    for i, test in enumerate(demo_questions, 1):
        print(f"Test {i}/{len(demo_questions)}")
        print(f"Question: {test['prompt']}")
        
        try:
            response = requests.post(
                f"{API_URL}/ia/simple", 
                headers=headers, 
                json={"prompt": test['prompt']}
            )
            
            if response.status_code == 200:
                result = response.json()
                
                category = result.get('category')
                ai_provider = result.get('ai_provider')
                response_text = result.get('response')
                
                print(f"‚úÖ Cat√©gorie: {category}")
                print(f"‚úÖ Fournisseur: {ai_provider}")
                print(f"‚úÖ R√©ponse: {response_text}")
                
                # V√©rifier que c'est bien le mode d√©mo
                if ai_provider == "demo_mode":
                    print("üé≠ Mode d√©mo actif !")
                else:
                    print(f"‚ö†Ô∏è Mode inattendu: {ai_provider}")
                
            else:
                print(f"‚ùå Erreur: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå Erreur: {e}")
        
        print("-" * 60)

def test_demo_with_audio():
    """Test du mode d√©mo avec g√©n√©ration audio"""
    print("\nüîä Test du mode d√©mo avec audio")
    
    test_prompt = "Comment √™tre plus confiant en rendez-vous ?"
    
    try:
        response = requests.post(
            f"{API_URL}/ia", 
            headers=headers, 
            json={
                "prompt": test_prompt,
                "include_prompt_audio": False  # √âviter l'audio du prompt
            }
        )
        
        if response.status_code == 200:
            result = response.json()
            
            print(f"‚úÖ Question: {test_prompt}")
            print(f"‚úÖ Cat√©gorie: {result.get('category')}")
            print(f"‚úÖ Fournisseur: {result.get('ai_provider')}")
            print(f"‚úÖ R√©ponse: {result.get('response')}")
            print(f"‚úÖ Audio g√©n√©r√©: {'Oui' if result.get('response_audio') else 'Non'}")
            print(f"‚úÖ Temps: {result.get('processing_time')}s")
            
            if result.get('response_audio'):
                audio_size = len(result.get('response_audio', ''))
                print(f"‚úÖ Taille audio: {audio_size} caract√®res (base64)")
        else:
            print(f"‚ùå Erreur: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

if __name__ == "__main__":
    test_demo_responses()
    test_demo_with_audio()
